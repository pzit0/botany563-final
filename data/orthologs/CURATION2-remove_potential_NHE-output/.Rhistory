pwd
getwd()
setwd("/Users/pzito/Desktop/botany563-final/data/orthologs/CURATION2-remove_potential_NHE-output")
library("seqinr")
setwd("/Users/pzito/Desktop/botany563-final/data/orthologs/CURATION2-remove_potential_NHE-output")
require("seqinr")
require("Biostrings") # has to be installed through BiocManager
DmelNHE3 <- readAAStringSet(file = "DmelNHE3_prot.fasta")
install.packages("seqinr")
install.packages("Biostrings")
install.packages("BiocManager")
BiocManager::install("Biostrings")
setwd("/Users/pzito/Desktop/botany563-final/data/orthologs/CURATION2-remove_potential_NHE-output")
require("seqinr")
require("Biostrings") # has to be installed through BiocManager
DmelNHE3 <- readAAStringSet(file = "DmelNHE3_prot.fasta")
DmelNHA2 <- readAAStringSet(file = "DmelNHA2_prot.fasta")
data <- readAAStringSet(file = "2023-03-12-protein_sequence_orthologs+DmelNHE3_UPPERCASE.fasta")
seq_name = names(data)
sequence = paste(data)
# this data has already been curated according to BLAST e-values for NHA and genome assembly quality
# right now it's inside the data folder, but once this script is done running I'll put it under ./orthologs/CURATION1
gap_open <- -10
gap_extent <- -4
index_list <- c() # save indexes where NHE score is higher than NHA
for(i in 1:length(sequence)){
seq <- AAString(gsub(" ", "", sequence[i]))
NHE_score <- pairwiseAlignment(DmelNHE3, seq, type = "global", substitutionMatrix = "BLOSUM50", gapOpening = gap_open, gapExtension = gap_extent, scoreOnly = TRUE)
NHA_score <- pairwiseAlignment(DmelNHA2, seq, type = "global", substitutionMatrix = "BLOSUM50", gapOpening = gap_open, gapExtension = gap_extent, scoreOnly = TRUE)
if(NHE_score >= NHA_score){
index_list <- append(index_list, i)
}
}
seq_name[index_list]
list.files()
df <- read.csv("orthologs-filtered-NHEless.csv" )
install.packages("tidyverse")
install.packages("dplyr")
require("dplyr")
head(df)
bad_seqs <- sequence[index_list]
bad_seq_names <- seq_name[index_list]
bad_seq_names
bad_accessions <- c()
strsplit(bad_seq_names[2])
strsplit(bad_seq_names[2], split = "-")
strsplit(bad_seq_names[2], split = "-")[1][2]
strsplit(bad_seq_names[2], split = "-")[1]
bad_seq_names[2]
strsplit(bad_seq_names[2], split = "-")
strsplit("I-need-a-vacation", split = "-")
str_split("I-need-a-vacation", pattern = "-")
test <- "I-need-a-vacation"
strsplit(test, split = "-")
strsplit(test, split = "-")[[1]]
strsplit(test, split = "-")[[1]][2]
for(i in 2:length(bad_seq_names)){
acc <- strsplit(i, split = "-")[[1]][2]
bad_accessions <- append(bad_accessions, acc)
}
for(i in 2:length(bad_seq_names)){
acc <- strsplit(bad_seq_names[i], split = "-")[[1]][2]
bad_accessions <- append(bad_accessions, acc)
}
bad_accessions
head(df%>%filter(protein.accession in bad_accessions))
head(df%>%filter(protein.accession == bad_accessions))
head(df%>%filter(protein.accession %in% bad_accessions))
head(df%>%filter(protein.accession %in% bad_accessions)%>%select(protein.accession))
NHE_less <- df %>%
filter(project.accession %in% bad_accessions) %>%
```
NHE_less <- df %>%
filter(project.accession %in% bad_accessions) %>%
NHE_less <- df %>%
filter(project.accession %in% bad_accessions)
NHE_less <- filter(df$project.accession %in% bad_accessions)
filter(project.accession %in% bad_accessions)
NHE_less <- dplyer::filter(df$project.accession %in% bad_accessions)
bad_accessions
NHE_less <- df%>%filter(project.accession %in% bad_accessions)
head(NHE_less%>%select(protein.accession))
dim(NHE_less)
NHE_less
NHE_less <- df%>%filter(protein.accession %in% bad_accessions)
dim(NHE_less)
NHE_less
dim(bad_seq_names)
length(bad_seq_names)
dim(df)
dim(NHE_less)
73-27
length(bad_accessions)
NHE_less <- df[!(protein.accession %in% bad_accessions) ]
NHE_less <- df%>%filter(!protein.accession %in% bad_accessions)
length(NHE_less)
dim(NHE_less)
?write.csv
NHE_less$species[1]
paste(NHE_less$species[1], sep ="")
row.names(NHE_less)
colnames(NHE_less)
NHE_less$species[1]
NHE_less$species[[1]]
NHE_less$species[[[1]]]
NHE_less$species[1]
test <- NHE_less$species[1]
test[1]
test[2]
strsplit(test, split = " ")
strsplit(test, split = " ")[[1]]
first_word <- strsplit(test, split = " ")[[1]][1]
first_word
first_letter <- strsplit(first_word, split = "")[[1]][1]
first_letter
last_word <- strsplit(test, split = " ")[[1]][2]
last_word
species_name <- paste(first_letter, last_word, sep = ".")
species_name
NHE_less$protein.accession[1]
fasta_name <- paste(">", species_name, NHE_less$protein.accession[1])
fasta_name <- paste(">", species_name, NHE_less$protein.accession[1], sep = "")
fasta_name
species_name <- paste(first_letter, last_word, NHE_less$protein.accession[1], sep = ".")
fasta_name <- paste(">", species_name, sep = "")
fasta_name
# update fasta file name because these are awful
dim(NHE_less)
# update fasta file name because these are awful
fasta_names <- c()
for(i in 1:nrow(NHE_less)){
first_word <- strsplit(NHE_less$species[i], split = " ")[[1]][1]
first_letter <- strsplit(first_word, split = "")[[1]][1]
last_word <- strsplit(NHE_less$species[i], split = " ")[[1]][2]
species_name <- paste(first_letter, last_word, NHE_less$protein.accession[i], sep = ".")
fasta_name <- paste(">", species_name, sep = "")
append(fasta_names, fasta_name)
}
fasta_names
for(i in 1:nrow(NHE_less)){
first_word <- strsplit(NHE_less$species[i], split = " ")[[1]][1]
first_letter <- strsplit(first_word, split = "")[[1]][1]
last_word <- strsplit(NHE_less$species[i], split = " ")[[1]][2]
species_name <- paste(first_letter, last_word, NHE_less$protein.accession[i], sep = ".")
fasta_name <- paste(">", species_name, sep = "")
append(fasta_names, fasta_name)
}
fasta_names
fasta_name
NHE_less$species[nrow(NHE_less)]
append(fasta_names, fasta_name)
# update fasta file name because these are awful
fasta_names <- c()
for(i in 1:nrow(NHE_less)){
first_word <- strsplit(NHE_less$species[i], split = " ")[[1]][1]
first_letter <- strsplit(first_word, split = "")[[1]][1]
last_word <- strsplit(NHE_less$species[i], split = " ")[[1]][2]
species_name <- paste(first_letter, last_word, sep = ".")
name <- paste(species_name, NHE_less$protein.accession[i], sep = "-")
fasta_name <- paste(">", species_name, sep = "")
fasta_names <- append(fasta_names, fasta_name)
}
fasta_names
# update fasta file name because these are awful
fasta_names <- c()
for(i in 1:nrow(NHE_less)){
first_word <- strsplit(NHE_less$species[i], split = " ")[[1]][1]
first_letter <- strsplit(first_word, split = "")[[1]][1]
last_word <- strsplit(NHE_less$species[i], split = " ")[[1]][2]
species_name <- paste(first_letter, last_word, sep = ".")
name <- paste(species_name, NHE_less$protein.accession[i], sep = "-")
fasta_name <- paste(">", name, sep = "")
fasta_names <- append(fasta_names, fasta_name)
}
fasta_names
?cbind()
?cbind
?rbind
updated_df <- rbind(NHE_less, fasta_names)
colnames(updated_df)
NHE_less$fasta.names <- fasta_names
NHE_less
# export
write.csv(NHE_less, file = "orthologs-filtered-NHEless.csv")
list.files()
length(unique(NHE_less$species))
nrow(NHE_less) # number of sequences remaining
head(NHE_less[,-"protein.accession"])
colnames(NHE_less)
head(NHE_less[,-9])
