paste(">","ABC.1234", "-", "organism")
paste(">","ABC.1234", "-", "organism", sep="")
head = paste(">","ABC.1234", "-", "organism", sep="")
paste(head, "\n", "seqseqseqseq", "\n")
# importing data
library(dplyr)
library(tidyverse)
data1 <- read.csv("2023-03-08-NHA1-filtered.csv", header = TRUE)
data2 <- read.csv("2023-03-08-NHA2-filtered.csv", header = TRUE)
data3 <- read.csv("2023-03-08-NHA3-filtered.csv", header = TRUE)
data4 <- read.csv("2023-03-08-NHA4-filtered.csv", header = TRUE)
data5 <- read.csv("2023-03-08-NHA5-filtered.csv", header = TRUE)
data6 <- read.csv("2023-03-08-NHA6-filtered.csv", header = TRUE)
data7 <- read.csv("2023-03-08-NHA7-filtered.csv", header = TRUE)
data8 <- read.csv("2023-03-08-NHA8-filtered.csv", header = TRUE)
as_tibble(data1)
as_tibble(data2)
as_tibble(data3)
as_tibble(data4)
as_tibble(data5)
as_tibble(data6)
as_tibble(data7)
as_tibble(data8)
# get accession names and sequences
data <- bind_rows(data1, data2, data3, data4, data5, data6, data7,data8)
compiled_data <- data %>%
distinct(.keep_all = TRUE) %>% # remove duplicates
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
compiled_data <- data %>%
distinct(.keep_all = TRUE) %>% # remove duplicates
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
#select(fasta_name, protein.sequence) # select columns
# export csv file
write.csv(compiled_data, "./2023-03-08-compiled-orthologs.csv")
compiled_data <- data %>%
distinct(.keep_all = TRUE) %>% # remove duplicates
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
compiled_data <- data %>%
distinct(.keep_all = TRUE) %>% # remove duplicates
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
#select(fasta_name, protein.sequence) # select columns
# export csv file
write.csv(compiled_data, "./2023-03-08-compiled-orthologs.csv")
compiled_data
compiled_data <- data %>%
distinct(.keep_all = TRUE) %>% # remove duplicates
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
compiled_data
compiled_data <- data %>%
distinct(.keep_all = TRUE) %>% # remove duplicates
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
#select(fasta_name, protein.sequence) # select columns
# export csv file
write.csv(data %>% distinct(.keep_all = TRUE), "./2023-03-08-compiled-orthologs.csv")
compiled_data <- data %>%
distinct(.keep_all = TRUE) %>% # remove duplicates
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
#select(fasta_name, protein.sequence) # select columns
# export csv file
write.csv((data %>% distinct(.keep_all = TRUE)), "./2023-03-08-compiled-orthologs.csv")
data
compiled_data <- data %>%
distinct(.keep_all = TRUE)
compiled_data
len(compiled_data)
dim(compiled_data)
compiled_data <- data %>%
distinct(.keep_all = TRUE) %>% # remove duplicates
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
#select(fasta_name, protein.sequence) # select columns
# export csv file
write.csv(compiled_data, "./2023-03-08-compiled-orthologs.csv")
getwd()
list.files(.)
list.files(".")
?list.files()
class(list.files("."))
for(i in 1:list.files(".")){
print(i)
}
# get files in folder:
files <- list.files(".")
files
getwd()
for(i in 1:length(files)){
print(i)
}
for(i in 1:length(files)){
print(files[i])
}
?grepl
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i])
}
}
compiled_data <- as.tibble()
# importing data
library(dplyr)
library(tidyverse)
compiled_data <- as.tibble()
compiled_data
compiled_data <- as_tibble()
compiled_data <- data.frame()
files <- list.files(".")
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i]) # tell me which ones are being compiled
data <- read.csv(file[i])
bindrows(compiled_data, data)
}
}
range(files)
files
?bind_rows
files <- list.files(".")
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i]) # tell me which ones are being compiled
data <- read.csv(file[i])
bind_rows(compiled_data, data)
}
}
?rbind
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i]) # tell me which ones are being compiled
data <- data.frame(read.csv(file[i]))
bind_rows(compiled_data, data)
}
}
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i]) # tell me which ones are being compiled
data <- read.csv(file[i])
rbin(compiled_data, data)
}
}
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i]) # tell me which ones are being compiled
data <- read.csv(file[i])
rbind(compiled_data, data)
}
}
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i])
}
}
files
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i])
head(read.csv(file[i]))
}
}
?append
HitTables <- c()
files <- list.files(".")
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
print(files[i]) # tell me which ones are being compiled
append(HitTables, files[i])
}
}
files
HitTables
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
data <- files[i] # tell me which ones are being compiled
print(data)
}
}
data
head(read_csv(data))
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
data <- files[i] # tell me which ones are being compiled
read_csv(data, col_names = FALSE)
}
}
# getting HitTables
compiled <- data_frame()
?rbind
# getting HitTables
compiled <- data_frame()
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
blast_res <- files[i]
data <- read_csv(blast_res, col_names = FALSE)
rbind(compiled, data)
}
}
compiled
data
data[:,2]
data[,2]
rbind()
compiled <- data_frame()
files <- list.files(".")
for(i in 1:length(files)){
if(grep("HitTable.csv", files[i])){
blast_res <- files[i]
data <- read_csv(blast_res, col_names = FALSE)
compiled <- rbind(data, compiled)
}
}
compiled
dim(compiled)
# remove duplicates
compiled <- compiled[!duplicated(compiled$X2)]
dim(compiled)
# remove duplicates
compiled <- compiled[!duplicated(compiled$X2),]
dim(compiled)
?write.csv
# export
out_name <- paste(Sys.Date(), "all_protein_orthologs_HitTable.csv", sep = "-")
out_name
write.csv(compiled, file = out_name)
list.files()
compiled
out_name
open(compiled)
View(compiled)
# importing data
library(dplyr)
library(tidyverse)
# get accession names and sequences
compiled_data <- data %>%
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
select(fasta_name, protein.sequence, cds.sequence) # select columns
compiled_data <- data %>%
mutate(fasta_name = paste(">", protein.accession, "-", species, sep = "")) %>% # add fasta head name
select(fasta_name, protein.sequence) # select columns
data
data[,0]
data <- read.csv("orthologs-filtered.csv", header = TRUE)
as_tibble(data)
data <- data %>%
mutate(fasta_name = paste(">", species, "-", protein.accession, sep = "")) %>% # add fasta head name
select(fasta_name, protein.sequence) # select columns
head(table)
head(data)
# write new fasta file
out_name1 <- paste(Sys.Date(), "protein_sequence_orthologs.fasta", sep = "-")
for(i in 1:size){
seq <- paste(new_fasta$fasta_name[i], "\n", new_fasta$protein.sequence[i], "\n", "\n")
cat(seq)
}
#out_name2 <- paste(Sys.Date(), "cds_sequence_orthologs.fasta", sep = "-")
size <- dim(new_fasta)[1]
for(i in 1:size){
seq <- paste(new_fasta$fasta_name[i], "\n", new_fasta$protein.sequence[i], "\n", "\n")
cat(seq)
}
#out_name2 <- paste(Sys.Date(), "cds_sequence_orthologs.fasta", sep = "-")
size <- dim(new_fasta)[1]
#out_name2 <- paste(Sys.Date(), "cds_sequence_orthologs.fasta", sep = "-")
size <- dim(data)[1]
for(i in 1:size){
seq <- paste(new_fasta$fasta_name[i], "\n", new_fasta$protein.sequence[i], "\n", "\n")
cat(seq)
}
for(i in 1:size){
seq <- paste(data$fasta_name[i], "\n", data$protein.sequence[i], "\n", "\n")
cat(seq)
}
sink()
sink()
for(i in 1:size){
seq <- paste(data$fasta_name[i], "\n", data$protein.sequence[i], "\n", "\n")
cat(seq)
}
sink()
sink(out_name1)
for(i in 1:size){
seq <- paste(data$fasta_name[i], "\n", data$protein.sequence[i], "\n", "\n")
cat(seq)
}
sink()
data <- read.csv("orthologs-filtered.csv", header = TRUE)
getwd()
setwd("/data")
# importing data
library(dplyr)
library(tidyverse)
data <- read.csv("orthologs-filtered.csv", header = TRUE)
getwd()
setwd("./data/")
ls
getwd()
data <- read.csv("orthologs-filtered.csv", header = TRUE)
as_tibble(data)
# get accession names and sequences
data <- data %>%
mutate(fasta_name = paste(">", species, "-", protein.accession, sep = "")) %>% # add fasta head name
select(fasta_name, protein.sequence) # select columns
data
data <- read.csv("orthologs-filtered.csv", header = TRUE)
as_tibble(data)
length(distinch(data$species))
length(distinct(data$species))
distinct(data$species)
dim(data%>%select(species)%>%distinct())
data%>%select(species)%>%distinct()
