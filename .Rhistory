getwd( )
setwd("/Users/pzito/Desktop/botany563-final")
list.files()
library(seqinr)
data = read.fasta("./data/2023-03-23-protein-NHA-orthologs.fasta")
library(ape)
write.nexus.data(data, file="./2023-04-06-protein-NHA-orthologs.nex",
format="protein")
setwd("/Users/pzito/Library/CloudStorage/Box-Box/spring-2023/genetic-mapping/HW8")
list.files()
getwd()
setwd("/Users/pzito/Library/CloudStorage/Box-Box/spring-2023/genetic-mapping/HW8")
list.files()
data <- read.csv("potato_pheno2.csv")
list.files()
install.packages("qtl")
library("qtl")
library(qtl)
data <- read.cross(format = "csvs", dir = ".", phefile = "potato_pheno2.csv")
data <- read.cross(format = "csvs", dir = ".", "potato_pheno2.csv")
setwd("/Users/pzito/Library/CloudStorage/Box-Box/spring-2023/genetic-mapping/HW8")
data <- read.cross(format = "csvs", dir = ".", "potato_pheno2.csv")
data <- read.cross("potato_pheno2.csv")
?read.cross
data <- read.cross(format = "csv", dir = ".", file = "potato_pheno2.csv")
data
install.package("qtlDesign")
install.packages("qtlDesign")
library(BiocManager)
BiocManager::install("qtlDesign")
install.packages("diaQTL")
library(devtools)
devtools::install_github("jendelman/diaQTL", build_vignettes=FALSE)
library(diaQTL)
data <- read_data(ploidy = 2, phenofile="potato_pheno.csv")
list.files()
data <- read.cross(format = "csvs", dir = ".", genfile = "potato_geno.csv", prefile = "potato_pheno2.csv")
data <- read.cross(format = "csvs", dir = ".", genfile = "potato_geno.csv", phefile = "potato_pheno2.csv")
data <- jittermap(data)
# using marker regression
ans.mr <- scanone(data, model = "normal", method = "mr", pheno = "LWratio")
data$pheno$YF
# using marker regression
ans.mr <- scanone(data, model = "normal", method = "mr", pheno = "YF")
plot(ans.mr)
sumary(ans.mr)
summary(ans.mr)
plot(ans.mr, chr = 3, type = "b")
library(diaQTL)
data2 <- read_data(genofile = "potato_geno_diaQTL.csv", ploidy = 2, phenofile="potato_pheno2.csv", pedfile = "potato_ped.csv")
# plot
DIC_thresh(genome.size=9, num.parents=2, ploidy=2)
ans.bay <- scan1(data2, trait = "YF2")
# plot
get_map(data2)
ans.bay <- scan1(data2, trait = "YF2")
scan1_summary(ans.bay, thresh = 13)
ans.bay <- scan1(data2, trait = "YF2")
scan1_summary(ans.bay, thresh = 13)
BayesCI(ans.bay, data2, CI.prob = 0.95)
# plot
get_map(data2)
DIC_thresh(genome.size = 9, num.parents = 2, ploidy = 2)
BayesCI(ans.bay, data2, chrom = "3", CI.prob = 0.95)
